// data/projects.ts
export const projects = [
    {
        slug: 'sabonnah-laundry-app',
        name: 'Sabonnah Laundry App',
        stars: 88,
        language: 'TypeScript',
        type: 'Mobile',
        languageColor: '#2b7489',
        forks: 45,
        imgHeight: 100,
        imgWidth: 200,
        description: 'A full-stack laundry service platform with dedicated apps for customers, vendors, and riders, plus an admin panel for real-time management and tracking',
        techStack: ['Next.js', 'NestJS', 'PostgreSQL', 'Twilio'],
        screenshots: [
          '/project-assets/sabonnah/screenshot-1.jpeg',
          '/project-assets/sabonnah/screenshot-2.jpeg',
          '/project-assets/sabonnah/screenshot-3.jpeg',
          '/project-assets/sabonnah/screenshot-4.jpeg',
          '/project-assets/sabonnah/screenshot-5.jpeg',
          '/project-assets/sabonnah/screenshot-6.jpeg',
          '/project-assets/sabonnah/screenshot-7.jpeg',
          '/project-assets/sabonnah/screenshot-8.jpeg',
          '/project-assets/sabonnah/screenshot-9.jpeg',
          '/project-assets/sabonnah/screenshot-10.jpeg',
          '/project-assets/sabonnah/screenshot-11.jpeg',
          '/project-assets/sabonnah/screenshot-12.jpeg',
          '/project-assets/sabonnah/screenshot-13.jpeg',
        ],
        points: [
          "Developed all app screens using React Native with Figma designs.",
          "Built backend with NestJS, Prisma, and PostgreSQL for handling vendors, riders, and customers.",
          "Implemented stack and tab navigation for a smooth UX.",
          "Integrated PayTabs payments using react-native-paytabs and managed transaction flows.",
          "Developed a voucher system with admin creation, customer redemption, and cron jobs for expiry & limits.",
          "Added tips feature allowing customers to send extra payments post-service.",
        ],
    },
    {
      slug: 'mightyjoy',
      name: 'MightyJoy',
      stars: 120,
      language: 'TypeScript',
      type: 'Web',
      languageColor: '#2b7489',
      forks: 45,
        imgHeight: 400,
      imgWidth: 500,
      description: 'A dynamic influencer marketing agency dedicated to helping brands scale by building their own engaged communities.',
      techStack: ['Next.js', 'NestJS', 'PostgreSQL', 'Twilio', 'NextAuth'],
      screenshots: ['/project-assets/mightyjoy/screenshot-1.jpeg',
          '/project-assets/mightyjoy/screenshot-2.jpeg',
          '/project-assets/mightyjoy/screenshot-3.jpeg',
          '/project-assets/mightyjoy/screenshot-4.jpeg',
          '/project-assets/mightyjoy/screenshot-5.jpeg',
          '/project-assets/mightyjoy/screenshot-6.jpeg',
          '/project-assets/mightyjoy/screenshot-7.jpeg',
        ],
      points: [
        "Built and integrated REST APIs using React Query with NestJS backend.",
        "Managed Prisma models to handle evolving database schema requirements.",
        "Connected Instagram and TikTok via their basic OAuth APIs for influencer insights.",
        "Built UI components using Tailwind CSS and integrated dynamic state using Zustand.",
        "Enhanced chat system built with Twilio to improve real-time communication.",
      ],
  
    },
    {
      slug: 'makery',
      name: 'Makery',
      stars: 88,
      language: 'TypeScript',
      type: 'Web',
      languageColor: '#2b7489',
      forks: 45,
      description: '"Makery - AI Image Generator" is a dynamic web application that empowers users to create and purchase LoRA models',
      techStack: ['Next.js', 'NestJS', 'PostgreSQL', 'Twilio'],
      imgHeight: 400,
      imgWidth: 500,
      screenshots: ['/project-assets/makery/screenshot-1.png'],
      points: [
        "Integrated Stripe referral payment flows including coupons and checkout sessions.",
        "Created admin dashboards for managing creators and their linked Stripe accounts.",
        "Optimized checkout flows and UI/UX based on dynamic task requirements.",
        "Implemented secure and scalable PostgreSQL models to handle creator data.",
      ],
    },
    {
      slug: 'apptycoons',
      name: 'Apptycoons',
      stars: 88,
      language: 'TypeScript',
      type: 'Web',
      languageColor: '#2b7489',
      forks: 45,
      description: 'Official website of Apptycoons: NextJS web-app static ui pages.',
      techStack: ['Next.js'],
      screenshots: ['/project-assets/apptycoons/screenshot-1.jpeg'],
      imgHeight: 400,
      imgWidth: 500,
      points: [
        "Created responsive and dynamic UI pages from scratch using Next.js and Tailwind CSS.",
        "Improved CLS, TBT, and overall Lighthouse performance scores for SEO and UX.",
        "Implemented lazy loading, optimized assets, and responsive typography.",
      ],
    },
  ];
  